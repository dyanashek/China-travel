import threading
from telebot import types

import functions

def main_keyboard():
    """Generates keyboards for main menu."""

    keyboard = types.InlineKeyboardMarkup()
    about_button = types.InlineKeyboardButton('–û –Ω–∞—Å', callback_data = 'about')
    manager_button = types.InlineKeyboardButton('–ú–µ–Ω–µ–¥–∂–µ—Ä', callback_data = 'manager')
    keyboard.add(about_button, manager_button)
    keyboard.add(types.InlineKeyboardButton('–£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã', callback_data = 'rules'))
    keyboard.add(types.InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ —Ä–∞—Å—á–µ—Ç', callback_data = 'calculate'))
    keyboard.add(types.InlineKeyboardButton('–°–∫–∞—á–∞—Ç—å –±–ª–∞–Ω–∫ –∑–∞—è–≤–∫–∏', callback_data = 'download'))
    keyboard.add(types.InlineKeyboardButton('–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏', callback_data = 'shipment'))

    return keyboard


def about_keyboard():
    """Generates keyboard for 'about' section."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–û–±–∑–æ—Ä –Ω–∞—à–µ–≥–æ —Å–∫–ª–∞–¥–∞', callback_data = 'stocks'))
    keyboard.add(types.InlineKeyboardButton('–û—Ç–∑—ã–≤—ã –æ –Ω–∞—Å', callback_data = 'reviews'))
    keyboard.add(types.InlineKeyboardButton('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', callback_data = 'networks'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞—à–∏ –∞–¥—Ä–µ—Å–∞', callback_data = 'addresses'))
    keyboard.add(types.InlineKeyboardButton('–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏', callback_data = 'details'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_main'))
    return keyboard
    

def networks_keyboard():
    """Generates keyboard with social media links."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–ù–∞—à —Å–∞–π—Ç', url = 'https://chinatravel-tk.ru/'))
    keyboard.add(types.InlineKeyboardButton('–ú—ã –≤ Instagram', url = 'https://instagram.com/china__trevel?igshid=YmMyMTA2M2Y='))
    keyboard.add(types.InlineKeyboardButton('–ú—ã –≤ VK', url = 'https://vk.com/chinatrevel'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞—à Telegram –∫–∞–Ω–∞–ª', url = 'https://t.me/china_travel_ru'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_about'))
    return keyboard


def addresses_keyboard():
    """Generates keyboard with addresses of stocks."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–ì—É–∞–Ω—á–∂–æ—É (–æ—Å–Ω–æ–≤–Ω–æ–π)', callback_data = 'guangzhou'))
    keyboard.add(types.InlineKeyboardButton('–ü–µ–∫–∏–Ω (—ç–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∞)', callback_data = 'beijing'))
    keyboard.add(types.InlineKeyboardButton('–ê–¥—Ä–µ—Å–∞ —Å–∫–ª–∞–¥–æ–≤ –≤ –ú–æ—Å–∫–≤–µ', callback_data = 'moscow'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_about'))
    return keyboard


def rules_keyboard():
    """Generates keyboard with terms of use."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞ –∏ –µ–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å', callback_data = 'cost'))
    keyboard.add(types.InlineKeyboardButton('–£—Å–ª–æ–≤–∏—è –ø–æ –≤—ã–∫—É–ø—É', callback_data = 'terms'))
    keyboard.add(types.InlineKeyboardButton('Poizon', callback_data = 'poizon'))
    keyboard.add(types.InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ AliPay', callback_data = 'alipay'))
    keyboard.add(types.InlineKeyboardButton('–ö—É—Ä—Å—ã —é–∞–Ω—è –∏ –¥–æ–ª–ª–∞—Ä–∞', callback_data = 'currency'))
    keyboard.add(types.InlineKeyboardButton('–®–∞–±–ª–æ–Ω –¥–æ–≥–æ–≤–æ—Ä–∞', callback_data = 'contract'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_main'))
    return keyboard


def back_about_keyboard():
    """Generates keyboards with 'back to about section' button."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å', callback_data = 'another_question'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_about'))
    return keyboard


def back_addresses_keyboard():
    """Generates keyboards with 'back to addresses section' button."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å', callback_data = 'another_question'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_addresses'))
    return keyboard


def back_rules_keyboard():
    """Generates keyboards with 'back to rules section' button."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å', callback_data = 'another_question'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_rules'))
    return keyboard


def back_rules_delete_keyboard():
    """Generates keyboards with 'back to rules section' button that should delete previous message."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å', callback_data = 'another_question'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_rules_delete'))
    return keyboard


def manager_keyboard(manager_username, manager_name):
    """Generates keyboards with 'proceed to manager' button."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f'–ß–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', url = f'https://t.me/{manager_username}'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_main'))
    return keyboard


def back_main_keyboard():
    """Generates keyboards with 'bact to main menu' button."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å', callback_data = 'another_question'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_main'))
    return keyboard


def only_manager_keyboard(manager_username):
    """Generates keyboards with 'proceed to manager' button (only this one)."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f'–ß–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', url = f'https://t.me/{manager_username}'))
    return keyboard


def back_main_delete_keyboard():
    """Generates keyboards with 'back to main' button that should delete previous message."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å', callback_data = 'another_question'))
    keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back_main_delete'))
    return keyboard


def reply_menu():
    """Generates reply menu buttons."""

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard = True)
    menu_button = types.KeyboardButton(f'üì± –ú–µ–Ω—é')
    manager_button = types.KeyboardButton(f'üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä')
    keyboard.add(menu_button, manager_button)
    return keyboard